[pre][align=center][size=5][b][u]Latest Update and Recommendation[/u][/b][/align][/size][/pre]
First, while I occassionally update this script, I am just one person and do not always update it quickly or answer support questions in a timely manner. I have found a community created and maintained Seedbox installer and have to say it is really slick. They have support forums and generally very quick support. Several people from BTN have tested it and feel confident recommending it. One warning though is that it changes the default SSH port to port 4747 and FTP port to 5757. They claim it's to reduce hits against the server. I prefer fail2ban with a permanent jail for this. If you just want to get a seedbox up and running quickly and without much work, this is your script. If you want HARD MODE ENGAGED! and like complete control over your seedbox and don't mind digging in to errors and software packages, then my script is for you! I still use my script because I like having that control. If I was building a seedbox for someone else I would use the QuickBox installer for sure.

https://quickbox.io/

Last Update on 2018.02.12 to update all package versions listed in the Software Versions section.

This script was updated on 2016.11.23 to work on Ubuntu 16.04 LTS. Here are the changes:

- Updated links to all packages
- Updated to PHP7 instead of PHP5
- Removed support for all OSes other than Debian/Ubuntu
- Tested with lighttpd, nginx, and apache on Ubuntu 16.04 LTS
- No longer compatible with Ubuntu 14.04 LTS due to PHP change
- http rutorrent does not seem to work on apache, but https does


[pre][align=center][size=5][b][u]Introduction[/u][/b][/align][/size][/pre]
The purpose of this tutorial is to create a seedbox from a blank OS (Ubuntu). The script will install all the required components for a fully working seedbox. At the end of script installation all the relevant information necessary to access the seedbox is presented in nice colors. After successfully running this script your box will be a fully functioning seedbox. The script will even take care of creating new users (both for the OS and for rTorrent). This script is aimed at Ubuntu, but should, in theory, work on most modern Debian forks. If this script doesn't work on your OS you could try the deprecated versions, which you can find in the footer of this tutorial on GitHub. 

This script was originally created and published on the ruTorrent forums (Brock). However, it has not been updated in 6 years. So, we decided we should start updating it and maintaining it.

[pre][align=center][size=5][b][u]Required Tools and Dependencies[/u][/b][/align][/size][/pre]
First, you need an Ubuntu (Debian varients SHOULD work) server with root/sudo access. Second, you will need SSH access to the server. And finally, you just need to follow the instructions in the Installation section.

The server you are installing it on doesn't even have to be a fresh install. It can be an existing server with users already on it and even some software. The script is smart enough to check for that. 
[spoiler=Software Versions Installed by the Script][*]rTorrent version 0.9.6
[*]libtorrent version 0.13.6
[*]ruTorrent version 3.7
[*]libcurl version 7.58.0
[*]libsig++ version 2.99.10
[*]lighttpd version 1.4.48
[*]nginx version 1.13.8
[*]mod_scgi version 1.15
[*]unrar version 5.5.8
NOTE: All other packages installed are whatever the latest package is available for the OS/repo. The version is not specifically designated like it is for the packages listed above.[/spoiler][spoiler=Primary OS and Webserver Supported][*]Ubuntu Server 16.04 LTS x64
[*]lighttpd 1.4.48
NOTE: These are the only OSes and webservers we have fully tested and will be able to offer (limited) support on. All other OS/Webserver combinations are as-is and have not been fully tested. We do not plan to do any further testing.[/spoiler][spoiler=Recently Tested Operating Systems]NOTE: There is NO support for these OSes and Webservers (except Ubuntu and lighttpd). We have merely tested the updated script to see what worked and what didn't work. These are our findings. All were tested using the script defaults (lighttpd for Webserver unless otherwise specified). We still recommend you use Ubuntu 16.04 LTS with lighttpd.
[*]Ubuntu 16.04.1 LTS x64 w/ lighttpd - Installed without errors. No further configuration needed. 
[*]Ubuntu 16.04.1 LTS x64 w/ nginx - Installed without errors. No further configuration needed. 
[*]Ubuntu 16.04.1 LTS x64 w/ apache - Installed without errors. http link for ruTorrent is not working, but https is.[/spoiler][spoiler=Untested but theoretically supported operating systems include:]
[*]Modern Debian-based (Debian, Ubuntu, LinixMint, PepperMint, and MEPIS)[/spoiler][spoiler=No longer supported OSes:]
[*] Ubuntu version prior to 16.04 LTS
[*]Fedora-based (Fedora, CentOS, RedHat, and ClearOS)[/spoiler][pre][align=center][size=5][b][u]Installation[/u][/b][/align][/size][/pre]
The script will take 10 - 20 minutes to fully run excluding time you spend answer questions or the script is sitting waiting on input. 

[pre][size=3][b][u]Installation Steps[/u][/b][/size][/pre]
The easy way to perform these steps is to copy/paste these exact lines in to your SSH session. 
[*]    wget --no-check-certificate https[n]://raw.github.com/SeedboxCreator/SeedboxCreationScript/master/seedbox-setup
[*]    sudo sh seedbox-setup
[*]    Answer the questions as they come up. If you get a message about CPAN.pm answer [color=green][i]YES[/i][/color] for automatically, [color=green][i]SUDO[/i][/color] for approach, and [color=green][i]YES[/i][/color] for connecting to the Internet. The script will continue on completely automated from there. 
NOTE: The sudo lines are unnecessary if you are logged on as root, but there's no need to remove them if you run as root.
[spoiler=Command-Line Installation Switches]--rtorrent
    Will build and install rtorrent, libtorrent and xmlrpc-c from source code.

--rtorrent-noexec-patch
    Patch rtorrent to disallow remote users from executing code.

--apache
    Install Apache web server.

--nginx
    Install nginx web server.

--lighttpd
    Install lighttpd web server.

--rutorrent
    Install ruTorrent. Requires a web server, eg. --apache.

--vsftpd
    Install vsftpd.

--ftpes
    Use encrypted FTP (FTPES).

--ftp-port <port>
    FTP server port.

--webmin
    Install Webmin.

-p
--rutorrent-plugin
    Use or install the autodl-irssi ruTorrent plugin. If it's already installed,
    it will be updated (svn up), unless --reinstall-plugin option is used in
    which case it will be re-installed.

-i
--reinstall-plugin
    Re-install the autodl-irssi ruTorrent plugin if it's already installed.

-a
--install-autodl
    Install autodl-irssi.

-u user:autodlPass:webUser:webPass
--user user:autodlPass:webUser:webPass
    The $(uname -s) user, autodl-irssi password, ruTorrent user, ruTorrent password.
    You can use more than one -u option. If autodlPassword is not set, a random
    password will be used.

-w
--password-protected
    Use this option if ruTorrent is password protected. It's required if you
    want to use more than one ruTorrent user. Not needed if you install
    ruTorrent.

-r PATH
--rutorrent-base-path PATH
    Path to ruTorrent, eg. /var/www/rutorrent. Not needed if you install
    ruTorrent.

-s
--install-startup-script
    Install a startup script (service) which will start Irssi and rtorrent when
    the computer boots.

-h
--help
    Show this help text[/spoiler][pre][size=3][b][u]Post-Installation Fixes[/u][/b][/size][/pre][spoiler=Fix for Diskspace being reported incorrectly]The plugin (diskspace) gets it's directory from whatever was set by the script in /var/rutorrent/rutorrent/conf/config.php

So you need to edit the /var/rutorrent/rutorrent/conf/config.php file like so:

Change the line starting with $topDirectory to this:

[b]$topDirectory = '/home/';[/b]

Replace whatever is after the = sign with the path to your home-dir (should be /home) and then restart your webserver (not necessarily rtorrent).

Longer instructions (don't type in the italics):
[b]sudo nano /var/rutorrent/rutorrent/conf/config.php[/b]
[i]<find and replace the line mentioned above>[/i]
[b]CTRL+X
Y
ENTER[/b]
[i]<should be back on commandline now>[/i]
[b]/etc/init.d/lighttpd restart[/b]
[i]<log on to your ruTorrent interface and done>[/i]

If you installed a different webserver, try one of the following:
[b]/etc/init.d/apache2 restart
/etc/init.d/nginx restart[/b][/spoiler][spoiler=Changing lighttpd/ruTorrent password for a user]It's pretty easy to do, but hard to find how to do it. You have to create a hash for the new password in the rutorrent_passwd file. That file should be located here:

[i][b]/usr/local/lighttpd/rutorrent_passwd[/b][/i]

You need to hash a new password and add it to the file by doing this:
[*][i][b]htpasswd rutorrent_passwd <USERNAME>[/b][/i]
[*][i][b]Replace <USERNAME> with what username you are using to log into your rutorrent GUI. Enter new password as prompted. It should respond with "Updating password for user <USERNAME>[/b][/i]
NOTE: You might have to install Apache tools to get the htpasswd utility. Install them with "sudo apt-get install apache2-utils"[/spoiler][spoiler=Specify a different download directory for a filter]I am going to assume you have the GUI plugin available in ruTorrent (if you installed via the script in this tutorial then you do). If not I can tell you how to configure your ini files from the command line. Also, I am going to show you how to change it both for the overall default folder and then how to change individual filters to go to different folders (which is what I do with some of my stuff). 

[b][size=3]Change Default Download Directory[/size][/b]
[*]Go to [b]Preferences[/b] in the autodl-irssi GUI.
[*]Switch to the [b]Action[/b] tab. 
[*]Make sure the setting for [b]Choose .torrent action[/b] is set to [b]rtorrent[/b]
[*]Choose the folder you want to save to and also specify anything else you want customize globally (Ratio group for one)
Picture for reference:
[img]http://img706.imageshack.us/img706/1454/datedec022012time103926.jpg[/img]

[b][size=3]Change Download Directory for an Individual Filter[/size][/b]
[*]Go to [b]Filters[/b] in the autodl-irssi GUI.
[*]Find the filter you want to change. 
[*]Switch to the [b]Action[/b] tab. 
[*]Change the setting for [b]Choose .torrent action[/b] from use global settings (the default) to [b]rtorrent[/b]
[*]Choose the folder you want to save to and also specify anything else you want custom for that filter
Picture for reference:
[img]http://img717.imageshack.us/img717/552/datedec022012time103118.jpg[/img][/spoiler][pre][align=center][size=5][b][u]Planned Customizations[/u][/b][/align][/size][/pre]
We would like to see more customizations and revamping of this script and would welcome anyone who has shell scripting experience to please join the SeedboxCreationScript git. 

Items to add/customize:
[*]Add in several 3rd party ruTorrent plugins (filemanager, fileshare, and logoff) - Not Started
[*]Testing other OSes.
[*]Keeping the script updated.
[*]Identifying a fix for Apache http issue.
[pre][align=center][size=5][b][u]Script Changelog[/u][/b][/align][/size][/pre][spoiler=2016.11.23][*]Updated links to all packages
[*]Updated to PHP7 instead of PHP5
[*]Removed support for all OSes other than Debian/Ubuntu
[*]Tested with lighttpd, nginx, and apache on Ubuntu 16.04 LTS
[*]No longer compatible with Ubuntu 14.04 LTS due to PHP change
[*]http rutorrent does not seem to work on apache, but https does[/spoiler][spoiler=2013.12.11][*]Changed to new script that only supports Debian/Fedora based OSes (removed 1600+ lines, which is good)
[*]Updated all packages to latest versions
[*]Switched to using autodl-community version of autodl-irssi
[*]Added git as standard package to be installed for all OSes in order to pull autodl-community (and other things)
[*]Moved mediainfo and irssi to be installed in installTools section and not in the installAutodlTools section; they were not installing in the installAutodlTools section, but work fine in installTools section; no clue why...
[*]Made lighttpd the default webserver choice with nginx second and apache last in the list[/spoiler][pre][align=center][size=5][b][u]Footer[/u][/b][/align][/size][/pre]
Credit for this tutorial goes to FatUnicorn. Original script by Brock @ ruTorrent forums. Additional thanks go to @[url=http://broadcasthe.netuser.php?id=1488171]thebigmunch[/url] and the autodl-community team for updating autodl-irssi.

[b][size=3]Reference Links[/size][/b]
Seedbox Creation Script Github:
[*]https://github.com/SeedboxCreator/SeedboxCreationScript/
autodl-community Github:
[*]https://github.com/autodl-community
[spoiler=[color=red][size=4]Original, now Deprecated Script[/size][/color]][color=red][size=7][b]NOTE: This script is NOT supported and will not be updated ever again.[/b][/size][/color]
[pre][align=center][size=5][b][u]Installation[/u][/b][/align][/size][/pre]
[*]    wget --no-check-certificate https[n]://raw.github.com/SeedboxCreator/SeedboxCreationScript/master/seedbox-setup-deprecated
[*]    sudo sh seedbox-setup-deprecated
[*]    Answer the questions as they come up. If you get a message about CPAN.pm answer [color=green][i]YES[/i][/color] for automatically, [color=green][i]SUDO[/i][/color] for approach, and [color=green][i]YES[/i][/color] for connecting to the Internet. The script will continue on completely automated from there. 

NOTE: The sudo lines are unnecessary if you are logged on as root.

[pre][size=3][b][u]Software Versions Installed by the Script[/u][/b][/size][/pre][*]rTorrent version 0.9.3
[*]libtorrent version 0.13.3 
[*]ruTorrent version 3.6
[*]libcurl version 7.33.0
[*]libsig++ version 2.3.1
[*]lighttpd version 1.4.33
[*]nginx version 1.5.7
[*]mod_scgi version 1.14
[*]unrar version 4.0.7

NOTE: All other packages installed are whatever the latest package is available for the OS/repo. The version is not specifically designated like it is for the packages listed above.

[pre][size=3][b][u]OSes that have been tested recently[/u][/b][/size][/pre]
NOTE: Testing as of December 2013. There is NO support for these OSes and Webservers (except Ubuntu and lighttpd with the current non-deprecated script). We have merely tested the updated script to see what worked and what didn't work. These are our findings. All were tested using the script defaults (lighttpd for Webserver unless otherwise specified). We still recommend you use Ubuntu with lighttpd with the current script. 
[*]Ubuntu 12.10.3 LTS x64 w/ lighttpd - Installed without errors. No further configuration needed. 
[*]Ubuntu 12.10.3 LTS x64 w/ nginx - Installed without errors. No further configuration needed. 
[*]Ubuntu 12.10.3 LTS x64 w/ apache - Installed without errors. No further configuration needed. 
[*]Debian 7.2 x64 - Installed without errors. No further configuration needed. 
[*]Debian 6.0.8 x64 - Had to manually install subversion, unzip, and irssi before the script would finish.
[*]Debian 6.0.6 x64 - Same as Debian 6.0.8
[*]CentOS 6.5 x64 - Installed just fine. Had to disable SELinux since it was enabled by default and also disable iptables. Also, had to install mediainfo manually since it is not in default repos.
[*]Gentoo - HAHAHAHAHA. Didn't even bother testing this. If you can install and setup Gentoo then you obviously don't like scripts and know enough about Linux to install everything on your own. 
[*]Slackware 14.1 x64 - Had to install slapt-get and even then the script will not install rTorrent. Stopped once script was not fully automated.
[*]Arch Linux 2013.12.01 x64 - Script failed with error: "Could not write to file /etc/rc.d/phpcgi. Run this script as root.". We were logged on as root so unsure how to fix the error. Did not continue. 
[*]FreeBSD 9.2 x64- Had to create the OS level users. The script would not create new users. Script then crashed with error: "Could not build xmlrpc-c". Did not continue.
[pre][size=3][b][u]OSes That The Script SHOULD Support (or did originally, but have not been maintained)[/u][/b][/size][/pre][*]Debian-based (Debian, Ubuntu, LinixMint, PepperMint, MEPIS, and Pardus)
[*]RPM-based (Fedora, CentOS, RedHat, openSUSE, PCLinuxOS, Mandriva, and Unity)
[*]Gentoo-based (Gentoo and Sabayon)
[*]Slackware-based (Slackware, Frugalware, VectorLinux
[*]Pacman-based (Arch Linux and Chakra)
[*]BSD-descendants (FreeBSD, OpenBSD, NetBSD, and DragonFly)[/spoiler]
